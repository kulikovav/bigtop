#!/bin/bash

# knox        Startup script for knox

# chkconfig: - 85 15
# processname: knox
# config: /etc/sysconfig/knox
# pidfile: /var/run/knox/gateway.pid
# description: REST API Gateway for the Apache Hadoop Ecosystem 

### BEGIN INIT INFO
# Provides: knox
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop knox
### END INIT INFO

###############################################################################

source /etc/init.d/kaosv

###############################################################################

knox_user="knox"
binary=${BINARY:-/opt/knox/bin/gateway.sh}
pid_dir=${KNOX_PID_DIR:-/var/run/knox/}
pid_file="${pid_dir}/gateway.pid"

###############################################################################

kv[user]="$knox_user"
kv[prog_name]="gateway"
kv[auto_pid]=""
kv[pid_file]="$pid_file"
kv[search_pattern]="bin/gateway.jar"
kv[auto_actions_log]=true

###############################################################################

kv.readSysconfig "knox"
export KNOX_PID_DIR
export KNOX_LOG_DIR
export KNOX_CONF_DIR
export KNOX_DATA_DIR

###############################################################################

kv.addCommand "start"        "Start ${kv[prog_name]}"
kv.addCommand "stop"         "Stop ${kv[prog_name]}"
kv.addCommand "restart"      "Restart (stop+start) ${kv[prog_name]}"
kv.addCommand "status"       "Show current status of ${kv[prog_name]}"

kv.addCommandVars "stop" "force"

kv.addHandler "start"   "startServiceHandler"
kv.addHandler "stop"    "stopServiceHandler"
kv.addHandler "restart" "restartServiceHandler"

###############################################################################

startServiceHandler() {

  kv.daemonize "$binary" "start"

  [[ $? -ne $ACTION_OK ]] && return $ACTION_ERROR

  if kv.getStartStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

stopServiceHandler() {
  local pid=`kv.getPid`

  if [[ -n "$1" ]] ; then
    kv.killProcess $pid
  else
    kv.sendSignal SIGTERM
  fi

  if kv.getStopStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

###############################################################################

kv.go "$@"

